steps:
  # بناء ودفع صورة الـ app
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/my-app:$SHORT_SHA', '.']
    dir: '.'

  # بناء ودفع صورة nginx
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/nginx:$SHORT_SHA', '.']
    dir: 'nginx'

  # دفع الصور
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/my-app:$SHORT_SHA']
  
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/nginx:$SHORT_SHA']

  # استبدال الصور في ملفات yaml بالقيم الفعلية
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        sed -i 's|IMAGE_PLACEHOLDER_APP|gcr.io/$PROJECT_ID/my-app:$SHORT_SHA|g' *.yaml
        sed -i 's|IMAGE_PLACEHOLDER_NGINX|gcr.io/$PROJECT_ID/nginx:$SHORT_SHA|g' deploy/*.yaml

  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        kubectl apply -f . --namespace=prod --validate=false 
        echo "Listing contents of deploy directory:"
        ls -al ./deploy/ 
        echo "Applying k8s configurations from deploy directory:"
        kubectl apply -f ./deploy/ --namespace=prod --validate=false 
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1-c'
      - 'CLOUDSDK_CONTAINER_CLUSTER=django-devops'
options:
  logging: CLOUD_LOGGING_ONLY
